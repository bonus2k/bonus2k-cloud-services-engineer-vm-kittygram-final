#GitHub  .github/workflows/deploy.yml
name: Deploy workflow

on:
  repository_dispatch:
    types: [terraform-workflow]

jobs:
  deploy:
    name: Deploy Kittygram to VM
    runs-on: ubuntu-latest
    if: ${{ vars.VM_ADDRESS != null && vars.VM_ADDRESS != '' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Generate `.env` file
        run: |
          echo "POSTGRES_HOST=${{ vars.POSTGRES_HOST }}" > .env
          echo "POSTGRES_DB=${{ vars.POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_PORT=${{ vars.POSTGRES_PORT }}" >> .env
          echo "BACKEND_IMAGE=${{ env.BACKEND_IMAGE }}" >> .env
          echo "FRONTEND_IMAGE=${{ env.FRONTEND_IMAGE }}" >> .env
          echo "GATEWAY_IMAGE=${{ env.GATEWAY_IMAGE }}" >> .env


      - name: Copy docker-compose.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.VM_ADDRESS }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          source: ".env, ${{ vars.COMPOSE_FILE }}"
          target: ${{ vars.VM_APP_DIR }}

      - name: Set permissions for `.env` file on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.VM_ADDRESS }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            cd ${{ vars.VM_APP_DIR }}
            chmod 600 .env
            echo "Permissions for .env set successfully."

      - name: Wait for cloud-init to complete
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.VM_ADDRESS }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            echo "Waiting for cloud-init to complete..."
            until [ "$(cloud-init status --wait && echo $? || echo $?)" -eq 0 ]; do
              echo "Cloud-init is still running, waiting 10 seconds..."
              sleep 10
            done
            echo "Cloud-init has completed."


      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        env:
          VM_APP_DIR: ${{ vars.VM_APP_DIR }}
          COMPOSE_FILE: ${{ vars.COMPOSE_FILE }}
        with:
          host: ${{ vars.VM_ADDRESS }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          envs: VM_APP_DIR,COMPOSE_FILE
          script: |    
            cd "$VM_APP_DIR"
            sudo docker compose -f "$COMPOSE_FILE" pull
            sudo docker compose -f "$COMPOSE_FILE" down
            sudo docker compose -f "$COMPOSE_FILE" up -d
            sudo docker compose -f "$COMPOSE_FILE" exec backend python manage.py makemigrations
            sudo docker compose -f "$COMPOSE_FILE" exec backend python manage.py migrate
            sudo docker compose -f "$COMPOSE_FILE" exec backend python manage.py collectstatic --noinput
            sudo docker compose -f "$COMPOSE_FILE" exec backend cp -r /collected_static/. /static/
            sudo docker compose -f "$COMPOSE_FILE" exec frontend cp -r /build/. /static/

  send_message:
    name: Send Message to Maintainer
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: Notify on success
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ðŸŸ¢ *Kittygram deployment completed successfully!* ðŸŽ‰
            *Deploy server:* `${{ vars.VM_ADDRESS }}`
            *Commit by:* `${{ github.actor }}`
            *Commit message:* `${{ github.event.commits[0].message }}`
            [View Commit](https://github.com/${{ github.repository }}/commit/${{ github.sha }})

      - name: Notify on failure
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ðŸ”´ *Kittygram deployment failed!* ðŸš¨
            *Commit by:* `${{ github.actor }}`
            *Commit message:* `${{ github.event.commits[0].message }}`
            [View Commit](https://github.com/${{ github.repository }}/commit/${{ github.sha }})


  copy_workflows:
    name: Push Latest Workflows
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Pull latest changes from remote
        run: |
          git checkout main
          git pull

      - name: Add file and commit changes
        env:
          VM_ADDRESS: ${{ vars.VM_ADDRESS }}
        run: |
          cp .github/workflows/build.yml kittygram_workflow.yml
          cat .github/workflows/terraform.yml >> kittygram_workflow.yml
          cat .github/workflows/deploy.yml >> kittygram_workflow.yml
          cat tests.template | envsubst > tests.yml
          git add kittygram_workflow.yml tests.yml
          git commit -m "Added kittygram_workflow.yml after successful deploy"

      - name: Push changes to repository
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main


