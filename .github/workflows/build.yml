#GitHub .github/workflows/build.yml
name: Build workflow

env:
  BACKEND_IMAGE: ${{ secrets.DOCKER_LOGIN }}/kitty_backend:latest
  FRONTEND_IMAGE: ${{ secrets.DOCKER_LOGIN }}/kitty_frontend:latest
  GATEWAY_IMAGE: ${{ secrets.DOCKER_LOGIN }}/kitty_gateway:latest

on:
  push:
    branches:
      - main

jobs:
  tests_backend:
    name: Testing Backend
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8==6.0.0 flake8-isort==6.0.0
      - name: Test with flake8
        run: python -m flake8 backend/

  tests_frontend:
    name: Testing Frontend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up nodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: |
          cd frontend/
          npm ci
      - name: Test frontend
        run: |
          cd frontend/
          npm run test

  build_backend_and_push_to_docker_hub:
    name: Push Backend Docker Image to DockerHub
    runs-on: ubuntu-latest
    needs: tests_backend
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          build-args: |
            FRONTEND_WORKDIR=${{ env.BACKEND_WORKDIR }}
          push: true
          tags: ${{ env.BACKEND_IMAGE }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_LOGIN }}/kitty_backend:cache
          cache-to: type=inline

  build_frontend_and_push_to_docker_hub:
    name: Push Frontend Docker Image to DockerHub
    runs-on: ubuntu-latest
    needs: tests_frontend
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          build-args: |
            FRONTEND_WORKDIR=${{ env.FRONTEND_WORKDIR }}
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_LOGIN }}/kitty_frontend:cache
          cache-to: type=inline

  build_gateway_and_push_to_docker_hub:
    name: Push gateway Docker Image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: ${{ env.GATEWAY_IMAGE }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_LOGIN }}/kitty_gateway:cache
          cache-to: type=inline